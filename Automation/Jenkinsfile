pipeline {
    agent any

    tools {
        maven 'M3'
        jdk 'jdk21'
    }

    environment {
        // Your Eclipse project folder
        ECLIPSE_WORKSPACE = 'C:\\Users\\badar\\git\\repository2\\Automation'
        COMMIT_MESSAGE = 'Jenkins: Auto-commit after build'
        BRANCH = 'master'   // using master branch
    }

    triggers {
        // Poll GitHub every 5 minutes
        pollSCM('H/5 * * * *')
    }

    stages {
        stage('Checkout from Git') {
            steps {
                git branch: "${env.BRANCH}", url: 'https://github.com/Badarinath15122001/Capstone-NopCommerce.git'
            }
        }

        stage('Copy from Eclipse Workspace') {
            steps {
                bat """
                echo Copying files from Eclipse workspace...
                xcopy /E /Y /I "${ECLIPSE_WORKSPACE}\\*" "Automation\\"

                echo Listing files in Automation folder after copy:
                dir Automation
                """
            }
        }

        stage('Commit & Push Changes') {
            steps {
                dir('Automation') {
                    withCredentials([usernamePassword(
                        credentialsId: 'capstone',
                        usernameVariable: 'GIT_USER',
                        passwordVariable: 'GIT_PASS'
                    )]) {
                        bat """
                            git config user.name "Jenkins"
                            git config user.email "jenkins@yourdomain.com"

                            git status
                            git add .
                            git diff --cached --quiet || git commit -m "${COMMIT_MESSAGE}"

                            REM Pull latest changes from remote before pushing
                            git pull https://%GIT_USER%:%GIT_PASS%@github.com/Badarinath15122001/Capstone-NopCommerce.git ${BRANCH} --rebase

                            REM Push changes back to remote
                            git push https://%GIT_USER%:%GIT_PASS%@github.com/Badarinath15122001/Capstone-NopCommerce.git HEAD:${BRANCH}
                        """
                    }
                }
            }
        }

        stage('Build and Run Single Test') {
            steps {
                dir('Automation') {
                    echo 'Running only LoginTest...'
                    bat 'mvn -Dtest=tests.LoginTest test'
                }
            }
        }

        stage('Test Results') {
            steps {
                dir('Automation') {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage('Publish Reports') {
            steps {
                dir('Automation') {
                    publishHTML(target: [
                        reportDir: 'test-output',
                        reportFiles: 'emailable-report.html',
                        reportName: 'TestNG Report'
                    ])

                    publishHTML(target: [
                        reportDir: 'reports/ExtentReports',
                        reportFiles: 'index.html',
                        reportName: 'Extent Report'
                    ])
                }
            }
        }
    }

    post {
        always {
            dir('Automation') {
                archiveArtifacts artifacts: '**/Screenshots/*.png', allowEmptyArchive: true
            }
        }
    }
}
